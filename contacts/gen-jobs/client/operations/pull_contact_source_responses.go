// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/simplycubed/contactkarma/contacts/gen-jobs/models"
)

// PullContactSourceReader is a Reader for the PullContactSource structure.
type PullContactSourceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PullContactSourceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPullContactSourceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPullContactSourceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPullContactSourceOK creates a PullContactSourceOK with default headers values
func NewPullContactSourceOK() *PullContactSourceOK {
	return &PullContactSourceOK{}
}

/* PullContactSourceOK describes a response with status code 200, with default header values.

Triggered
*/
type PullContactSourceOK struct {
	Payload *models.JobSuccess
}

func (o *PullContactSourceOK) Error() string {
	return fmt.Sprintf("[POST /pull-contact-source][%d] pullContactSourceOK  %+v", 200, o.Payload)
}
func (o *PullContactSourceOK) GetPayload() *models.JobSuccess {
	return o.Payload
}

func (o *PullContactSourceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.JobSuccess)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPullContactSourceBadRequest creates a PullContactSourceBadRequest with default headers values
func NewPullContactSourceBadRequest() *PullContactSourceBadRequest {
	return &PullContactSourceBadRequest{}
}

/* PullContactSourceBadRequest describes a response with status code 400, with default header values.

Error
*/
type PullContactSourceBadRequest struct {
	Payload *models.JobError
}

func (o *PullContactSourceBadRequest) Error() string {
	return fmt.Sprintf("[POST /pull-contact-source][%d] pullContactSourceBadRequest  %+v", 400, o.Payload)
}
func (o *PullContactSourceBadRequest) GetPayload() *models.JobError {
	return o.Payload
}

func (o *PullContactSourceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.JobError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
