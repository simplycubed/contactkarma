// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/simplycubed/contactkarma/contacts/gen-jobs/models"
)

// PullContactsOKCode is the HTTP code returned for type PullContactsOK
const PullContactsOKCode int = 200

/*PullContactsOK Triggered

swagger:response pullContactsOK
*/
type PullContactsOK struct {

	/*
	  In: Body
	*/
	Payload *models.JobSuccess `json:"body,omitempty"`
}

// NewPullContactsOK creates PullContactsOK with default headers values
func NewPullContactsOK() *PullContactsOK {

	return &PullContactsOK{}
}

// WithPayload adds the payload to the pull contacts o k response
func (o *PullContactsOK) WithPayload(payload *models.JobSuccess) *PullContactsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the pull contacts o k response
func (o *PullContactsOK) SetPayload(payload *models.JobSuccess) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PullContactsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PullContactsBadRequestCode is the HTTP code returned for type PullContactsBadRequest
const PullContactsBadRequestCode int = 400

/*PullContactsBadRequest Error

swagger:response pullContactsBadRequest
*/
type PullContactsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.JobError `json:"body,omitempty"`
}

// NewPullContactsBadRequest creates PullContactsBadRequest with default headers values
func NewPullContactsBadRequest() *PullContactsBadRequest {

	return &PullContactsBadRequest{}
}

// WithPayload adds the payload to the pull contacts bad request response
func (o *PullContactsBadRequest) WithPayload(payload *models.JobError) *PullContactsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the pull contacts bad request response
func (o *PullContactsBadRequest) SetPayload(payload *models.JobError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PullContactsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
