// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/simplycubed/contactkarma/contacts/gen-jobs/models"
)

// PullContactSourceOKCode is the HTTP code returned for type PullContactSourceOK
const PullContactSourceOKCode int = 200

/*PullContactSourceOK Triggered

swagger:response pullContactSourceOK
*/
type PullContactSourceOK struct {

	/*
	  In: Body
	*/
	Payload *models.JobSuccess `json:"body,omitempty"`
}

// NewPullContactSourceOK creates PullContactSourceOK with default headers values
func NewPullContactSourceOK() *PullContactSourceOK {

	return &PullContactSourceOK{}
}

// WithPayload adds the payload to the pull contact source o k response
func (o *PullContactSourceOK) WithPayload(payload *models.JobSuccess) *PullContactSourceOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the pull contact source o k response
func (o *PullContactSourceOK) SetPayload(payload *models.JobSuccess) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PullContactSourceOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PullContactSourceBadRequestCode is the HTTP code returned for type PullContactSourceBadRequest
const PullContactSourceBadRequestCode int = 400

/*PullContactSourceBadRequest Error

swagger:response pullContactSourceBadRequest
*/
type PullContactSourceBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.JobError `json:"body,omitempty"`
}

// NewPullContactSourceBadRequest creates PullContactSourceBadRequest with default headers values
func NewPullContactSourceBadRequest() *PullContactSourceBadRequest {

	return &PullContactSourceBadRequest{}
}

// WithPayload adds the payload to the pull contact source bad request response
func (o *PullContactSourceBadRequest) WithPayload(payload *models.JobError) *PullContactSourceBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the pull contact source bad request response
func (o *PullContactSourceBadRequest) SetPayload(payload *models.JobError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PullContactSourceBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
