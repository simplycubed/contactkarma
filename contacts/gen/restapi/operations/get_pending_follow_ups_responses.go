// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/simplycubed/contactkarma/contacts/gen/models"
)

// GetPendingFollowUpsOKCode is the HTTP code returned for type GetPendingFollowUpsOK
const GetPendingFollowUpsOKCode int = 200

/*GetPendingFollowUpsOK Retrieved

swagger:response getPendingFollowUpsOK
*/
type GetPendingFollowUpsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Unified `json:"body,omitempty"`
}

// NewGetPendingFollowUpsOK creates GetPendingFollowUpsOK with default headers values
func NewGetPendingFollowUpsOK() *GetPendingFollowUpsOK {

	return &GetPendingFollowUpsOK{}
}

// WithPayload adds the payload to the get pending follow ups o k response
func (o *GetPendingFollowUpsOK) WithPayload(payload []*models.Unified) *GetPendingFollowUpsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get pending follow ups o k response
func (o *GetPendingFollowUpsOK) SetPayload(payload []*models.Unified) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPendingFollowUpsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Unified, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetPendingFollowUpsBadRequestCode is the HTTP code returned for type GetPendingFollowUpsBadRequest
const GetPendingFollowUpsBadRequestCode int = 400

/*GetPendingFollowUpsBadRequest Error

swagger:response getPendingFollowUpsBadRequest
*/
type GetPendingFollowUpsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetPendingFollowUpsBadRequest creates GetPendingFollowUpsBadRequest with default headers values
func NewGetPendingFollowUpsBadRequest() *GetPendingFollowUpsBadRequest {

	return &GetPendingFollowUpsBadRequest{}
}

// WithPayload adds the payload to the get pending follow ups bad request response
func (o *GetPendingFollowUpsBadRequest) WithPayload(payload *models.ErrorResponse) *GetPendingFollowUpsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get pending follow ups bad request response
func (o *GetPendingFollowUpsBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPendingFollowUpsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPendingFollowUpsUnauthorizedCode is the HTTP code returned for type GetPendingFollowUpsUnauthorized
const GetPendingFollowUpsUnauthorizedCode int = 401

/*GetPendingFollowUpsUnauthorized Error

swagger:response getPendingFollowUpsUnauthorized
*/
type GetPendingFollowUpsUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetPendingFollowUpsUnauthorized creates GetPendingFollowUpsUnauthorized with default headers values
func NewGetPendingFollowUpsUnauthorized() *GetPendingFollowUpsUnauthorized {

	return &GetPendingFollowUpsUnauthorized{}
}

// WithPayload adds the payload to the get pending follow ups unauthorized response
func (o *GetPendingFollowUpsUnauthorized) WithPayload(payload *models.ErrorResponse) *GetPendingFollowUpsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get pending follow ups unauthorized response
func (o *GetPendingFollowUpsUnauthorized) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPendingFollowUpsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPendingFollowUpsInternalServerErrorCode is the HTTP code returned for type GetPendingFollowUpsInternalServerError
const GetPendingFollowUpsInternalServerErrorCode int = 500

/*GetPendingFollowUpsInternalServerError Internal Server Error

swagger:response getPendingFollowUpsInternalServerError
*/
type GetPendingFollowUpsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetPendingFollowUpsInternalServerError creates GetPendingFollowUpsInternalServerError with default headers values
func NewGetPendingFollowUpsInternalServerError() *GetPendingFollowUpsInternalServerError {

	return &GetPendingFollowUpsInternalServerError{}
}

// WithPayload adds the payload to the get pending follow ups internal server error response
func (o *GetPendingFollowUpsInternalServerError) WithPayload(payload *models.ErrorResponse) *GetPendingFollowUpsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get pending follow ups internal server error response
func (o *GetPendingFollowUpsInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPendingFollowUpsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
