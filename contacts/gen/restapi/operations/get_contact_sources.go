// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetContactSourcesHandlerFunc turns a function with the right signature into a get contact sources handler
type GetContactSourcesHandlerFunc func(GetContactSourcesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetContactSourcesHandlerFunc) Handle(params GetContactSourcesParams) middleware.Responder {
	return fn(params)
}

// GetContactSourcesHandler interface for that can handle valid get contact sources params
type GetContactSourcesHandler interface {
	Handle(GetContactSourcesParams) middleware.Responder
}

// NewGetContactSources creates a new http.Handler for the get contact sources operation
func NewGetContactSources(ctx *middleware.Context, handler GetContactSourcesHandler) *GetContactSources {
	return &GetContactSources{Context: ctx, Handler: handler}
}

/* GetContactSources swagger:route GET /contacts/sources getContactSources

get user's contact source list

*/
type GetContactSources struct {
	Context *middleware.Context
	Handler GetContactSourcesHandler
}

func (o *GetContactSources) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetContactSourcesParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
