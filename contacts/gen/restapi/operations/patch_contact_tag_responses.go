// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/simplycubed/contactkarma/contacts/gen/models"
)

// PatchContactTagOKCode is the HTTP code returned for type PatchContactTagOK
const PatchContactTagOKCode int = 200

/*PatchContactTagOK Updated

swagger:response patchContactTagOK
*/
type PatchContactTagOK struct {

	/*
	  In: Body
	*/
	Payload *models.Tag `json:"body,omitempty"`
}

// NewPatchContactTagOK creates PatchContactTagOK with default headers values
func NewPatchContactTagOK() *PatchContactTagOK {

	return &PatchContactTagOK{}
}

// WithPayload adds the payload to the patch contact tag o k response
func (o *PatchContactTagOK) WithPayload(payload *models.Tag) *PatchContactTagOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch contact tag o k response
func (o *PatchContactTagOK) SetPayload(payload *models.Tag) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchContactTagOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PatchContactTagBadRequestCode is the HTTP code returned for type PatchContactTagBadRequest
const PatchContactTagBadRequestCode int = 400

/*PatchContactTagBadRequest Error

swagger:response patchContactTagBadRequest
*/
type PatchContactTagBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPatchContactTagBadRequest creates PatchContactTagBadRequest with default headers values
func NewPatchContactTagBadRequest() *PatchContactTagBadRequest {

	return &PatchContactTagBadRequest{}
}

// WithPayload adds the payload to the patch contact tag bad request response
func (o *PatchContactTagBadRequest) WithPayload(payload *models.ErrorResponse) *PatchContactTagBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch contact tag bad request response
func (o *PatchContactTagBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchContactTagBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PatchContactTagUnauthorizedCode is the HTTP code returned for type PatchContactTagUnauthorized
const PatchContactTagUnauthorizedCode int = 401

/*PatchContactTagUnauthorized Error

swagger:response patchContactTagUnauthorized
*/
type PatchContactTagUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPatchContactTagUnauthorized creates PatchContactTagUnauthorized with default headers values
func NewPatchContactTagUnauthorized() *PatchContactTagUnauthorized {

	return &PatchContactTagUnauthorized{}
}

// WithPayload adds the payload to the patch contact tag unauthorized response
func (o *PatchContactTagUnauthorized) WithPayload(payload *models.ErrorResponse) *PatchContactTagUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch contact tag unauthorized response
func (o *PatchContactTagUnauthorized) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchContactTagUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PatchContactTagNotFoundCode is the HTTP code returned for type PatchContactTagNotFound
const PatchContactTagNotFoundCode int = 404

/*PatchContactTagNotFound Error

swagger:response patchContactTagNotFound
*/
type PatchContactTagNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPatchContactTagNotFound creates PatchContactTagNotFound with default headers values
func NewPatchContactTagNotFound() *PatchContactTagNotFound {

	return &PatchContactTagNotFound{}
}

// WithPayload adds the payload to the patch contact tag not found response
func (o *PatchContactTagNotFound) WithPayload(payload *models.ErrorResponse) *PatchContactTagNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch contact tag not found response
func (o *PatchContactTagNotFound) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchContactTagNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PatchContactTagInternalServerErrorCode is the HTTP code returned for type PatchContactTagInternalServerError
const PatchContactTagInternalServerErrorCode int = 500

/*PatchContactTagInternalServerError Internal Server Error

swagger:response patchContactTagInternalServerError
*/
type PatchContactTagInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPatchContactTagInternalServerError creates PatchContactTagInternalServerError with default headers values
func NewPatchContactTagInternalServerError() *PatchContactTagInternalServerError {

	return &PatchContactTagInternalServerError{}
}

// WithPayload adds the payload to the patch contact tag internal server error response
func (o *PatchContactTagInternalServerError) WithPayload(payload *models.ErrorResponse) *PatchContactTagInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch contact tag internal server error response
func (o *PatchContactTagInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchContactTagInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
