// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetUnifiedContactsHandlerFunc turns a function with the right signature into a get unified contacts handler
type GetUnifiedContactsHandlerFunc func(GetUnifiedContactsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetUnifiedContactsHandlerFunc) Handle(params GetUnifiedContactsParams) middleware.Responder {
	return fn(params)
}

// GetUnifiedContactsHandler interface for that can handle valid get unified contacts params
type GetUnifiedContactsHandler interface {
	Handle(GetUnifiedContactsParams) middleware.Responder
}

// NewGetUnifiedContacts creates a new http.Handler for the get unified contacts operation
func NewGetUnifiedContacts(ctx *middleware.Context, handler GetUnifiedContactsHandler) *GetUnifiedContacts {
	return &GetUnifiedContacts{Context: ctx, Handler: handler}
}

/* GetUnifiedContacts swagger:route GET /unified getUnifiedContacts

get unified list of contacts

*/
type GetUnifiedContacts struct {
	Context *middleware.Context
	Handler GetUnifiedContactsHandler
}

func (o *GetUnifiedContacts) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetUnifiedContactsParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
