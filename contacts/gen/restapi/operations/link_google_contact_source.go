// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// LinkGoogleContactSourceHandlerFunc turns a function with the right signature into a link google contact source handler
type LinkGoogleContactSourceHandlerFunc func(LinkGoogleContactSourceParams) middleware.Responder

// Handle executing the request and returning a response
func (fn LinkGoogleContactSourceHandlerFunc) Handle(params LinkGoogleContactSourceParams) middleware.Responder {
	return fn(params)
}

// LinkGoogleContactSourceHandler interface for that can handle valid link google contact source params
type LinkGoogleContactSourceHandler interface {
	Handle(LinkGoogleContactSourceParams) middleware.Responder
}

// NewLinkGoogleContactSource creates a new http.Handler for the link google contact source operation
func NewLinkGoogleContactSource(ctx *middleware.Context, handler LinkGoogleContactSourceHandler) *LinkGoogleContactSource {
	return &LinkGoogleContactSource{Context: ctx, Handler: handler}
}

/* LinkGoogleContactSource swagger:route POST /contacts/sources/google/link linkGoogleContactSource

redirects user to google consent page

*/
type LinkGoogleContactSource struct {
	Context *middleware.Context
	Handler LinkGoogleContactSourceHandler
}

func (o *LinkGoogleContactSource) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewLinkGoogleContactSourceParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// LinkGoogleContactSourceBody link google contact source body
//
// swagger:model LinkGoogleContactSourceBody
type LinkGoogleContactSourceBody struct {

	// auth code
	AuthCode string `json:"auth_code,omitempty"`
}

// Validate validates this link google contact source body
func (o *LinkGoogleContactSourceBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this link google contact source body based on context it is used
func (o *LinkGoogleContactSourceBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LinkGoogleContactSourceBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LinkGoogleContactSourceBody) UnmarshalBinary(b []byte) error {
	var res LinkGoogleContactSourceBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
