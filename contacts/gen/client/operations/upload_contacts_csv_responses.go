// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/simplycubed/contactkarma/contacts/gen/models"
)

// UploadContactsCsvReader is a Reader for the UploadContactsCsv structure.
type UploadContactsCsvReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UploadContactsCsvReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUploadContactsCsvOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUploadContactsCsvBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUploadContactsCsvUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUploadContactsCsvInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUploadContactsCsvOK creates a UploadContactsCsvOK with default headers values
func NewUploadContactsCsvOK() *UploadContactsCsvOK {
	return &UploadContactsCsvOK{}
}

/* UploadContactsCsvOK describes a response with status code 200, with default header values.

Uploaded
*/
type UploadContactsCsvOK struct {
	Payload *models.Message
}

func (o *UploadContactsCsvOK) Error() string {
	return fmt.Sprintf("[POST /contacts/upload-csv][%d] uploadContactsCsvOK  %+v", 200, o.Payload)
}
func (o *UploadContactsCsvOK) GetPayload() *models.Message {
	return o.Payload
}

func (o *UploadContactsCsvOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadContactsCsvBadRequest creates a UploadContactsCsvBadRequest with default headers values
func NewUploadContactsCsvBadRequest() *UploadContactsCsvBadRequest {
	return &UploadContactsCsvBadRequest{}
}

/* UploadContactsCsvBadRequest describes a response with status code 400, with default header values.

Error
*/
type UploadContactsCsvBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *UploadContactsCsvBadRequest) Error() string {
	return fmt.Sprintf("[POST /contacts/upload-csv][%d] uploadContactsCsvBadRequest  %+v", 400, o.Payload)
}
func (o *UploadContactsCsvBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UploadContactsCsvBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadContactsCsvUnauthorized creates a UploadContactsCsvUnauthorized with default headers values
func NewUploadContactsCsvUnauthorized() *UploadContactsCsvUnauthorized {
	return &UploadContactsCsvUnauthorized{}
}

/* UploadContactsCsvUnauthorized describes a response with status code 401, with default header values.

Error
*/
type UploadContactsCsvUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *UploadContactsCsvUnauthorized) Error() string {
	return fmt.Sprintf("[POST /contacts/upload-csv][%d] uploadContactsCsvUnauthorized  %+v", 401, o.Payload)
}
func (o *UploadContactsCsvUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UploadContactsCsvUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadContactsCsvInternalServerError creates a UploadContactsCsvInternalServerError with default headers values
func NewUploadContactsCsvInternalServerError() *UploadContactsCsvInternalServerError {
	return &UploadContactsCsvInternalServerError{}
}

/* UploadContactsCsvInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UploadContactsCsvInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *UploadContactsCsvInternalServerError) Error() string {
	return fmt.Sprintf("[POST /contacts/upload-csv][%d] uploadContactsCsvInternalServerError  %+v", 500, o.Payload)
}
func (o *UploadContactsCsvInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UploadContactsCsvInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
