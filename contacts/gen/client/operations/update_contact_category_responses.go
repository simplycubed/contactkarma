// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/simplycubed/contactkarma/contacts/gen/models"
)

// UpdateContactCategoryReader is a Reader for the UpdateContactCategory structure.
type UpdateContactCategoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateContactCategoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateContactCategoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateContactCategoryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUpdateContactCategoryUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateContactCategoryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateContactCategoryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateContactCategoryOK creates a UpdateContactCategoryOK with default headers values
func NewUpdateContactCategoryOK() *UpdateContactCategoryOK {
	return &UpdateContactCategoryOK{}
}

/* UpdateContactCategoryOK describes a response with status code 200, with default header values.

Updated
*/
type UpdateContactCategoryOK struct {
	Payload *models.Unified
}

func (o *UpdateContactCategoryOK) Error() string {
	return fmt.Sprintf("[PATCH /unified/{unified_id}/category][%d] updateContactCategoryOK  %+v", 200, o.Payload)
}
func (o *UpdateContactCategoryOK) GetPayload() *models.Unified {
	return o.Payload
}

func (o *UpdateContactCategoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Unified)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateContactCategoryBadRequest creates a UpdateContactCategoryBadRequest with default headers values
func NewUpdateContactCategoryBadRequest() *UpdateContactCategoryBadRequest {
	return &UpdateContactCategoryBadRequest{}
}

/* UpdateContactCategoryBadRequest describes a response with status code 400, with default header values.

Error
*/
type UpdateContactCategoryBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *UpdateContactCategoryBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /unified/{unified_id}/category][%d] updateContactCategoryBadRequest  %+v", 400, o.Payload)
}
func (o *UpdateContactCategoryBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateContactCategoryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateContactCategoryUnauthorized creates a UpdateContactCategoryUnauthorized with default headers values
func NewUpdateContactCategoryUnauthorized() *UpdateContactCategoryUnauthorized {
	return &UpdateContactCategoryUnauthorized{}
}

/* UpdateContactCategoryUnauthorized describes a response with status code 401, with default header values.

Error
*/
type UpdateContactCategoryUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *UpdateContactCategoryUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /unified/{unified_id}/category][%d] updateContactCategoryUnauthorized  %+v", 401, o.Payload)
}
func (o *UpdateContactCategoryUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateContactCategoryUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateContactCategoryNotFound creates a UpdateContactCategoryNotFound with default headers values
func NewUpdateContactCategoryNotFound() *UpdateContactCategoryNotFound {
	return &UpdateContactCategoryNotFound{}
}

/* UpdateContactCategoryNotFound describes a response with status code 404, with default header values.

Error
*/
type UpdateContactCategoryNotFound struct {
	Payload *models.ErrorResponse
}

func (o *UpdateContactCategoryNotFound) Error() string {
	return fmt.Sprintf("[PATCH /unified/{unified_id}/category][%d] updateContactCategoryNotFound  %+v", 404, o.Payload)
}
func (o *UpdateContactCategoryNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateContactCategoryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateContactCategoryInternalServerError creates a UpdateContactCategoryInternalServerError with default headers values
func NewUpdateContactCategoryInternalServerError() *UpdateContactCategoryInternalServerError {
	return &UpdateContactCategoryInternalServerError{}
}

/* UpdateContactCategoryInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UpdateContactCategoryInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *UpdateContactCategoryInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /unified/{unified_id}/category][%d] updateContactCategoryInternalServerError  %+v", 500, o.Payload)
}
func (o *UpdateContactCategoryInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *UpdateContactCategoryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
