// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/simplycubed/contactkarma/contacts/gen/models"
)

// LinkGoogleContactSourceReader is a Reader for the LinkGoogleContactSource structure.
type LinkGoogleContactSourceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LinkGoogleContactSourceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLinkGoogleContactSourceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewLinkGoogleContactSourceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewLinkGoogleContactSourceUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewLinkGoogleContactSourceForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewLinkGoogleContactSourceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewLinkGoogleContactSourceOK creates a LinkGoogleContactSourceOK with default headers values
func NewLinkGoogleContactSourceOK() *LinkGoogleContactSourceOK {
	return &LinkGoogleContactSourceOK{}
}

/* LinkGoogleContactSourceOK describes a response with status code 200, with default header values.

Linked
*/
type LinkGoogleContactSourceOK struct {
	Location string
}

func (o *LinkGoogleContactSourceOK) Error() string {
	return fmt.Sprintf("[POST /contacts/sources/google/link][%d] linkGoogleContactSourceOK ", 200)
}

func (o *LinkGoogleContactSourceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Location
	hdrLocation := response.GetHeader("Location")

	if hdrLocation != "" {
		o.Location = hdrLocation
	}

	return nil
}

// NewLinkGoogleContactSourceBadRequest creates a LinkGoogleContactSourceBadRequest with default headers values
func NewLinkGoogleContactSourceBadRequest() *LinkGoogleContactSourceBadRequest {
	return &LinkGoogleContactSourceBadRequest{}
}

/* LinkGoogleContactSourceBadRequest describes a response with status code 400, with default header values.

Error
*/
type LinkGoogleContactSourceBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *LinkGoogleContactSourceBadRequest) Error() string {
	return fmt.Sprintf("[POST /contacts/sources/google/link][%d] linkGoogleContactSourceBadRequest  %+v", 400, o.Payload)
}
func (o *LinkGoogleContactSourceBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *LinkGoogleContactSourceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLinkGoogleContactSourceUnauthorized creates a LinkGoogleContactSourceUnauthorized with default headers values
func NewLinkGoogleContactSourceUnauthorized() *LinkGoogleContactSourceUnauthorized {
	return &LinkGoogleContactSourceUnauthorized{}
}

/* LinkGoogleContactSourceUnauthorized describes a response with status code 401, with default header values.

Error
*/
type LinkGoogleContactSourceUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *LinkGoogleContactSourceUnauthorized) Error() string {
	return fmt.Sprintf("[POST /contacts/sources/google/link][%d] linkGoogleContactSourceUnauthorized  %+v", 401, o.Payload)
}
func (o *LinkGoogleContactSourceUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *LinkGoogleContactSourceUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLinkGoogleContactSourceForbidden creates a LinkGoogleContactSourceForbidden with default headers values
func NewLinkGoogleContactSourceForbidden() *LinkGoogleContactSourceForbidden {
	return &LinkGoogleContactSourceForbidden{}
}

/* LinkGoogleContactSourceForbidden describes a response with status code 403, with default header values.

quota limit reached
*/
type LinkGoogleContactSourceForbidden struct {
	Payload *models.ErrorResponse
}

func (o *LinkGoogleContactSourceForbidden) Error() string {
	return fmt.Sprintf("[POST /contacts/sources/google/link][%d] linkGoogleContactSourceForbidden  %+v", 403, o.Payload)
}
func (o *LinkGoogleContactSourceForbidden) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *LinkGoogleContactSourceForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLinkGoogleContactSourceInternalServerError creates a LinkGoogleContactSourceInternalServerError with default headers values
func NewLinkGoogleContactSourceInternalServerError() *LinkGoogleContactSourceInternalServerError {
	return &LinkGoogleContactSourceInternalServerError{}
}

/* LinkGoogleContactSourceInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type LinkGoogleContactSourceInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *LinkGoogleContactSourceInternalServerError) Error() string {
	return fmt.Sprintf("[POST /contacts/sources/google/link][%d] linkGoogleContactSourceInternalServerError  %+v", 500, o.Payload)
}
func (o *LinkGoogleContactSourceInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *LinkGoogleContactSourceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*LinkGoogleContactSourceBody link google contact source body
swagger:model LinkGoogleContactSourceBody
*/
type LinkGoogleContactSourceBody struct {

	// auth code
	AuthCode string `json:"auth_code,omitempty"`
}

// Validate validates this link google contact source body
func (o *LinkGoogleContactSourceBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this link google contact source body based on context it is used
func (o *LinkGoogleContactSourceBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LinkGoogleContactSourceBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LinkGoogleContactSourceBody) UnmarshalBinary(b []byte) error {
	var res LinkGoogleContactSourceBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
