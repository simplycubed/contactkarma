// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewApplyLinkSuggestionParams creates a new ApplyLinkSuggestionParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewApplyLinkSuggestionParams() *ApplyLinkSuggestionParams {
	return &ApplyLinkSuggestionParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewApplyLinkSuggestionParamsWithTimeout creates a new ApplyLinkSuggestionParams object
// with the ability to set a timeout on a request.
func NewApplyLinkSuggestionParamsWithTimeout(timeout time.Duration) *ApplyLinkSuggestionParams {
	return &ApplyLinkSuggestionParams{
		timeout: timeout,
	}
}

// NewApplyLinkSuggestionParamsWithContext creates a new ApplyLinkSuggestionParams object
// with the ability to set a context for a request.
func NewApplyLinkSuggestionParamsWithContext(ctx context.Context) *ApplyLinkSuggestionParams {
	return &ApplyLinkSuggestionParams{
		Context: ctx,
	}
}

// NewApplyLinkSuggestionParamsWithHTTPClient creates a new ApplyLinkSuggestionParams object
// with the ability to set a custom HTTPClient for a request.
func NewApplyLinkSuggestionParamsWithHTTPClient(client *http.Client) *ApplyLinkSuggestionParams {
	return &ApplyLinkSuggestionParams{
		HTTPClient: client,
	}
}

/* ApplyLinkSuggestionParams contains all the parameters to send to the API endpoint
   for the apply link suggestion operation.

   Typically these are written to a http.Request.
*/
type ApplyLinkSuggestionParams struct {

	// XApigatewayAPIUserinfo.
	XApigatewayAPIUserinfo string

	// Body.
	Body ApplyLinkSuggestionBody

	/* SuggestionID.

	   suggestion id
	*/
	SuggestionID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the apply link suggestion params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ApplyLinkSuggestionParams) WithDefaults() *ApplyLinkSuggestionParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the apply link suggestion params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ApplyLinkSuggestionParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the apply link suggestion params
func (o *ApplyLinkSuggestionParams) WithTimeout(timeout time.Duration) *ApplyLinkSuggestionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the apply link suggestion params
func (o *ApplyLinkSuggestionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the apply link suggestion params
func (o *ApplyLinkSuggestionParams) WithContext(ctx context.Context) *ApplyLinkSuggestionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the apply link suggestion params
func (o *ApplyLinkSuggestionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the apply link suggestion params
func (o *ApplyLinkSuggestionParams) WithHTTPClient(client *http.Client) *ApplyLinkSuggestionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the apply link suggestion params
func (o *ApplyLinkSuggestionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithXApigatewayAPIUserinfo adds the xApigatewayAPIUserinfo to the apply link suggestion params
func (o *ApplyLinkSuggestionParams) WithXApigatewayAPIUserinfo(xApigatewayAPIUserinfo string) *ApplyLinkSuggestionParams {
	o.SetXApigatewayAPIUserinfo(xApigatewayAPIUserinfo)
	return o
}

// SetXApigatewayAPIUserinfo adds the xApigatewayApiUserinfo to the apply link suggestion params
func (o *ApplyLinkSuggestionParams) SetXApigatewayAPIUserinfo(xApigatewayAPIUserinfo string) {
	o.XApigatewayAPIUserinfo = xApigatewayAPIUserinfo
}

// WithBody adds the body to the apply link suggestion params
func (o *ApplyLinkSuggestionParams) WithBody(body ApplyLinkSuggestionBody) *ApplyLinkSuggestionParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the apply link suggestion params
func (o *ApplyLinkSuggestionParams) SetBody(body ApplyLinkSuggestionBody) {
	o.Body = body
}

// WithSuggestionID adds the suggestionID to the apply link suggestion params
func (o *ApplyLinkSuggestionParams) WithSuggestionID(suggestionID string) *ApplyLinkSuggestionParams {
	o.SetSuggestionID(suggestionID)
	return o
}

// SetSuggestionID adds the suggestionId to the apply link suggestion params
func (o *ApplyLinkSuggestionParams) SetSuggestionID(suggestionID string) {
	o.SuggestionID = suggestionID
}

// WriteToRequest writes these params to a swagger request
func (o *ApplyLinkSuggestionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param X-Apigateway-Api-Userinfo
	if err := r.SetHeaderParam("X-Apigateway-Api-Userinfo", o.XApigatewayAPIUserinfo); err != nil {
		return err
	}
	if err := r.SetBodyParam(o.Body); err != nil {
		return err
	}

	// path param suggestion_id
	if err := r.SetPathParam("suggestion_id", o.SuggestionID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
