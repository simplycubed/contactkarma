// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/simplycubed/contactkarma/contacts/gen/models"
)

// PatchContactNoteReader is a Reader for the PatchContactNote structure.
type PatchContactNoteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchContactNoteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchContactNoteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchContactNoteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPatchContactNoteUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPatchContactNoteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchContactNoteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchContactNoteOK creates a PatchContactNoteOK with default headers values
func NewPatchContactNoteOK() *PatchContactNoteOK {
	return &PatchContactNoteOK{}
}

/* PatchContactNoteOK describes a response with status code 200, with default header values.

Updated
*/
type PatchContactNoteOK struct {
	Payload *models.Note
}

func (o *PatchContactNoteOK) Error() string {
	return fmt.Sprintf("[PATCH /unified/{unified_id}/notes/{note_id}][%d] patchContactNoteOK  %+v", 200, o.Payload)
}
func (o *PatchContactNoteOK) GetPayload() *models.Note {
	return o.Payload
}

func (o *PatchContactNoteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Note)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchContactNoteBadRequest creates a PatchContactNoteBadRequest with default headers values
func NewPatchContactNoteBadRequest() *PatchContactNoteBadRequest {
	return &PatchContactNoteBadRequest{}
}

/* PatchContactNoteBadRequest describes a response with status code 400, with default header values.

Error
*/
type PatchContactNoteBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *PatchContactNoteBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /unified/{unified_id}/notes/{note_id}][%d] patchContactNoteBadRequest  %+v", 400, o.Payload)
}
func (o *PatchContactNoteBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PatchContactNoteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchContactNoteUnauthorized creates a PatchContactNoteUnauthorized with default headers values
func NewPatchContactNoteUnauthorized() *PatchContactNoteUnauthorized {
	return &PatchContactNoteUnauthorized{}
}

/* PatchContactNoteUnauthorized describes a response with status code 401, with default header values.

Error
*/
type PatchContactNoteUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *PatchContactNoteUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /unified/{unified_id}/notes/{note_id}][%d] patchContactNoteUnauthorized  %+v", 401, o.Payload)
}
func (o *PatchContactNoteUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PatchContactNoteUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchContactNoteNotFound creates a PatchContactNoteNotFound with default headers values
func NewPatchContactNoteNotFound() *PatchContactNoteNotFound {
	return &PatchContactNoteNotFound{}
}

/* PatchContactNoteNotFound describes a response with status code 404, with default header values.

Error
*/
type PatchContactNoteNotFound struct {
	Payload *models.ErrorResponse
}

func (o *PatchContactNoteNotFound) Error() string {
	return fmt.Sprintf("[PATCH /unified/{unified_id}/notes/{note_id}][%d] patchContactNoteNotFound  %+v", 404, o.Payload)
}
func (o *PatchContactNoteNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PatchContactNoteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchContactNoteInternalServerError creates a PatchContactNoteInternalServerError with default headers values
func NewPatchContactNoteInternalServerError() *PatchContactNoteInternalServerError {
	return &PatchContactNoteInternalServerError{}
}

/* PatchContactNoteInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PatchContactNoteInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *PatchContactNoteInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /unified/{unified_id}/notes/{note_id}][%d] patchContactNoteInternalServerError  %+v", 500, o.Payload)
}
func (o *PatchContactNoteInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PatchContactNoteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
